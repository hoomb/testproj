# This configuration is intended for development purpose, it's **your** responsibility to harden it for production
version: '3.8'
services:
  testproj-prometheus:
    image: prom/prometheus:v2.38.0
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    #networks: 
    #  - docker_monitoring
    ports:
      - 127.0.0.1:9090:9090
    # On MacOS, remove next line and replace localhost by host.docker.internal in prometheus/prometheus.yml and
    # grafana/provisioning/datasources/datasource.yml
    #network_mode: 'host' # to test locally running service
  testproj-grafana:
    image: grafana/grafana:9.1.0
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    #networks: 
    #  - docker_monitoring  
    ports:
      - 127.0.0.1:3000:3000
    # On MacOS, remove next line and replace localhost by host.docker.internal in prometheus/prometheus.yml and
    # grafana/provisioning/datasources/datasource.yml
    #network_mode: 'host' # to test locally running service
  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    environment:
      - DATA_SOURCE_URI=testproj-postgresql:5432/testprojdb?sslmode=disable
      - DATA_SOURCE_USER=testproj_dbuser
      - DATA_SOURCE_PASS=q!NDTcV7dyIS!W@+
    #networks: 
    #  - docker_monitoring
    ports:
      - 127.0.0.1:9187:9187
  blackbox-exporter:
    modules:
      http_2xx:
      prober: http
      timeout: 5s
        http:
          tls_config:
          insecure_skip_verify: false
      tcp_connect:
        prober: tcp
        timeout: 5s
        tcp:
          preferred_ip_protocol: ip4
